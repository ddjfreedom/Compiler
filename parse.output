State 1 conflicts: 1 shift/reduce
State 77 conflicts: 12 shift/reduce
State 88 conflicts: 13 shift/reduce
State 94 conflicts: 12 shift/reduce
State 114 conflicts: 12 shift/reduce
State 130 conflicts: 12 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: /* empty */
    2     | expr

    3 expr: STRING
    4     | INTEGER
    5     | NIL
    6     | lvalue
    7     | '-' expr
    8     | expr '+' expr
    9     | expr '-' expr
   10     | expr '*' expr
   11     | expr '/' expr
   12     | expr '=' expr
   13     | expr '<' expr
   14     | expr '>' expr
   15     | expr "<>" expr
   16     | expr "<=" expr
   17     | expr ">=" expr
   18     | expr '&' expr
   19     | expr '|' expr
   20     | lvalue ":=" expr
   21     | IDENTIFIER '(' exprlist ')'
   22     | '(' exprseq ')'
   23     | IDENTIFIER '{' fieldlist '}'
   24     | array OF expr
   25     | IF expr THEN expr
   26     | IF expr THEN expr ELSE expr
   27     | WHILE expr DO expr
   28     | FOR IDENTIFIER ":=" expr TO expr DO expr
   29     | BREAK
   30     | LET decllist IN exprseq END

   31 exprseq: /* empty */
   32        | expr
   33        | exprseq ';' expr

   34 exprlist: /* empty */
   35         | expr
   36         | exprlist ',' expr

   37 fieldlist: /* empty */
   38          | IDENTIFIER '=' expr
   39          | fieldlist ',' IDENTIFIER '=' expr

   40 array: IDENTIFIER '[' expr ']'

   41 lvalue: IDENTIFIER
   42       | lvalue '.' IDENTIFIER
   43       | array
   44       | lvalue '[' expr ']'

   45 decllist: decl
   46         | decllist decl

   47 decl: typedecl
   48     | vardecl
   49     | funcdecl

   50 typedecl: TYPE IDENTIFIER '=' type

   51 type: IDENTIFIER
   52     | '{' typefields '}'
   53     | ARRAY OF IDENTIFIER

   54 typefields: /* empty */
   55           | typefield
   56           | typefields ',' typefield

   57 typefield: IDENTIFIER ':' IDENTIFIER

   58 vardecl: VAR IDENTIFIER ":=" expr
   59        | VAR IDENTIFIER ':' IDENTIFIER ":=" expr

   60 funcdecl: FUNCTION IDENTIFIER '(' typefields ')' '=' expr
   61         | FUNCTION IDENTIFIER '(' typefields ')' ':' IDENTIFIER '=' expr


Terminals, with rules where they appear

$end (0) 0
'&' (38) 18
'(' (40) 21 22 60 61
')' (41) 21 22 60 61
'*' (42) 10
'+' (43) 8
',' (44) 36 39 56
'-' (45) 7 9
'.' (46) 42
'/' (47) 11
':' (58) 57 59 61
';' (59) 33
'<' (60) 13
'=' (61) 12 38 39 50 60 61
'>' (62) 14
'[' (91) 40 44
']' (93) 40 44
'{' (123) 23 52
'|' (124) 19
'}' (125) 23 52
error (256)
IDENTIFIER (258) 21 23 28 38 39 40 41 42 50 51 53 57 58 59 60 61
INTEGER (259) 4
STRING (260) 3
"<>" (261) 15
"<=" (262) 16
">=" (263) 17
":=" (264) 20 28 58 59
ARRAY (265) 53
BREAK (266) 29
DO (267) 27 28
ELSE (268) 26
END (269) 30
FOR (270) 28
FUNCTION (271) 60 61
IF (272) 25 26
IN (273) 30
LET (274) 30
NIL (275) 5
OF (276) 24 53
THEN (277) 25 26
TO (278) 28
TYPE (279) 50
VAR (280) 58 59
WHILE (281) 27
NEG (282)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
prog (48)
    on left: 1 2, on right: 0
expr (49)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29 30, on right: 2 7 8 9 10 11 12 13 14 15 16 17
    18 19 20 24 25 26 27 28 32 33 35 36 38 39 40 44 58 59 60 61
exprseq (50)
    on left: 31 32 33, on right: 22 30 33
exprlist (51)
    on left: 34 35 36, on right: 21 36
fieldlist (52)
    on left: 37 38 39, on right: 23 39
array (53)
    on left: 40, on right: 24 43
lvalue (54)
    on left: 41 42 43 44, on right: 6 20 42 44
decllist (55)
    on left: 45 46, on right: 30 46
decl (56)
    on left: 47 48 49, on right: 45 46
typedecl (57)
    on left: 50, on right: 47
type (58)
    on left: 51 52 53, on right: 50
typefields (59)
    on left: 54 55 56, on right: 52 56 60 61
typefield (60)
    on left: 57, on right: 55 56
vardecl (61)
    on left: 58 59, on right: 48
funcdecl (62)
    on left: 60 61, on right: 49


state 0

    0 $accept: . prog $end

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    $default  reduce using rule 1 (prog)

    prog    go to state 12
    expr    go to state 13
    array   go to state 14
    lvalue  go to state 15


state 1

   21 expr: IDENTIFIER . '(' exprlist ')'
   23     | IDENTIFIER . '{' fieldlist '}'
   40 array: IDENTIFIER . '[' expr ']'
   41 lvalue: IDENTIFIER .

    '('  shift, and go to state 16
    '{'  shift, and go to state 17
    '['  shift, and go to state 18

    '['       [reduce using rule 41 (lvalue)]
    $default  reduce using rule 41 (lvalue)


state 2

    4 expr: INTEGER .

    $default  reduce using rule 4 (expr)


state 3

    3 expr: STRING .

    $default  reduce using rule 3 (expr)


state 4

   29 expr: BREAK .

    $default  reduce using rule 29 (expr)


state 5

   28 expr: FOR . IDENTIFIER ":=" expr TO expr DO expr

    IDENTIFIER  shift, and go to state 19


state 6

   25 expr: IF . expr THEN expr
   26     | IF . expr THEN expr ELSE expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 20
    array   go to state 14
    lvalue  go to state 15


state 7

   30 expr: LET . decllist IN exprseq END

    FUNCTION  shift, and go to state 21
    TYPE      shift, and go to state 22
    VAR       shift, and go to state 23

    decllist  go to state 24
    decl      go to state 25
    typedecl  go to state 26
    vardecl   go to state 27
    funcdecl  go to state 28


state 8

    5 expr: NIL .

    $default  reduce using rule 5 (expr)


state 9

   27 expr: WHILE . expr DO expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 29
    array   go to state 14
    lvalue  go to state 15


state 10

    7 expr: '-' . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 30
    array   go to state 14
    lvalue  go to state 15


state 11

   22 expr: '(' . exprseq ')'

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    $default  reduce using rule 31 (exprseq)

    expr     go to state 31
    exprseq  go to state 32
    array    go to state 14
    lvalue   go to state 15


state 12

    0 $accept: prog . $end

    $end  shift, and go to state 33


state 13

    2 prog: expr .
    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45

    $default  reduce using rule 2 (prog)


state 14

   24 expr: array . OF expr
   43 lvalue: array .

    OF  shift, and go to state 46

    $default  reduce using rule 43 (lvalue)


state 15

    6 expr: lvalue .
   20     | lvalue . ":=" expr
   42 lvalue: lvalue . '.' IDENTIFIER
   44       | lvalue . '[' expr ']'

    ":="  shift, and go to state 47
    '['   shift, and go to state 48
    '.'   shift, and go to state 49

    $default  reduce using rule 6 (expr)


state 16

   21 expr: IDENTIFIER '(' . exprlist ')'

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    $default  reduce using rule 34 (exprlist)

    expr      go to state 50
    exprlist  go to state 51
    array     go to state 14
    lvalue    go to state 15


state 17

   23 expr: IDENTIFIER '{' . fieldlist '}'

    IDENTIFIER  shift, and go to state 52

    $default  reduce using rule 37 (fieldlist)

    fieldlist  go to state 53


state 18

   40 array: IDENTIFIER '[' . expr ']'

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 54
    array   go to state 14
    lvalue  go to state 15


state 19

   28 expr: FOR IDENTIFIER . ":=" expr TO expr DO expr

    ":="  shift, and go to state 55


state 20

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   25     | IF expr . THEN expr
   26     | IF expr . THEN expr ELSE expr

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    THEN  shift, and go to state 56
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45


state 21

   60 funcdecl: FUNCTION . IDENTIFIER '(' typefields ')' '=' expr
   61         | FUNCTION . IDENTIFIER '(' typefields ')' ':' IDENTIFIER '=' expr

    IDENTIFIER  shift, and go to state 57


state 22

   50 typedecl: TYPE . IDENTIFIER '=' type

    IDENTIFIER  shift, and go to state 58


state 23

   58 vardecl: VAR . IDENTIFIER ":=" expr
   59        | VAR . IDENTIFIER ':' IDENTIFIER ":=" expr

    IDENTIFIER  shift, and go to state 59


state 24

   30 expr: LET decllist . IN exprseq END
   46 decllist: decllist . decl

    FUNCTION  shift, and go to state 21
    IN        shift, and go to state 60
    TYPE      shift, and go to state 22
    VAR       shift, and go to state 23

    decl      go to state 61
    typedecl  go to state 26
    vardecl   go to state 27
    funcdecl  go to state 28


state 25

   45 decllist: decl .

    $default  reduce using rule 45 (decllist)


state 26

   47 decl: typedecl .

    $default  reduce using rule 47 (decl)


state 27

   48 decl: vardecl .

    $default  reduce using rule 48 (decl)


state 28

   49 decl: funcdecl .

    $default  reduce using rule 49 (decl)


state 29

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   27     | WHILE expr . DO expr

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    DO    shift, and go to state 62
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45


state 30

    7 expr: '-' expr .
    8     | expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr

    $default  reduce using rule 7 (expr)


state 31

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   32 exprseq: expr .

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45

    $default  reduce using rule 32 (exprseq)


state 32

   22 expr: '(' exprseq . ')'
   33 exprseq: exprseq . ';' expr

    ')'  shift, and go to state 63
    ';'  shift, and go to state 64


state 33

    0 $accept: prog $end .

    $default  accept


state 34

   15 expr: expr "<>" . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 65
    array   go to state 14
    lvalue  go to state 15


state 35

   16 expr: expr "<=" . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 66
    array   go to state 14
    lvalue  go to state 15


state 36

   17 expr: expr ">=" . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 67
    array   go to state 14
    lvalue  go to state 15


state 37

   19 expr: expr '|' . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 68
    array   go to state 14
    lvalue  go to state 15


state 38

   18 expr: expr '&' . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 69
    array   go to state 14
    lvalue  go to state 15


state 39

   12 expr: expr '=' . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 70
    array   go to state 14
    lvalue  go to state 15


state 40

   14 expr: expr '>' . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 71
    array   go to state 14
    lvalue  go to state 15


state 41

   13 expr: expr '<' . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 72
    array   go to state 14
    lvalue  go to state 15


state 42

    8 expr: expr '+' . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 73
    array   go to state 14
    lvalue  go to state 15


state 43

    9 expr: expr '-' . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 74
    array   go to state 14
    lvalue  go to state 15


state 44

   10 expr: expr '*' . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 75
    array   go to state 14
    lvalue  go to state 15


state 45

   11 expr: expr '/' . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 76
    array   go to state 14
    lvalue  go to state 15


state 46

   24 expr: array OF . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 77
    array   go to state 14
    lvalue  go to state 15


state 47

   20 expr: lvalue ":=" . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 78
    array   go to state 14
    lvalue  go to state 15


state 48

   44 lvalue: lvalue '[' . expr ']'

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 79
    array   go to state 14
    lvalue  go to state 15


state 49

   42 lvalue: lvalue '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 80


state 50

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   35 exprlist: expr .

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45

    $default  reduce using rule 35 (exprlist)


state 51

   21 expr: IDENTIFIER '(' exprlist . ')'
   36 exprlist: exprlist . ',' expr

    ')'  shift, and go to state 81
    ','  shift, and go to state 82


state 52

   38 fieldlist: IDENTIFIER . '=' expr

    '='  shift, and go to state 83


state 53

   23 expr: IDENTIFIER '{' fieldlist . '}'
   39 fieldlist: fieldlist . ',' IDENTIFIER '=' expr

    '}'  shift, and go to state 84
    ','  shift, and go to state 85


state 54

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   40 array: IDENTIFIER '[' expr . ']'

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45
    ']'   shift, and go to state 86


state 55

   28 expr: FOR IDENTIFIER ":=" . expr TO expr DO expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 87
    array   go to state 14
    lvalue  go to state 15


state 56

   25 expr: IF expr THEN . expr
   26     | IF expr THEN . expr ELSE expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 88
    array   go to state 14
    lvalue  go to state 15


state 57

   60 funcdecl: FUNCTION IDENTIFIER . '(' typefields ')' '=' expr
   61         | FUNCTION IDENTIFIER . '(' typefields ')' ':' IDENTIFIER '=' expr

    '('  shift, and go to state 89


state 58

   50 typedecl: TYPE IDENTIFIER . '=' type

    '='  shift, and go to state 90


state 59

   58 vardecl: VAR IDENTIFIER . ":=" expr
   59        | VAR IDENTIFIER . ':' IDENTIFIER ":=" expr

    ":="  shift, and go to state 91
    ':'   shift, and go to state 92


state 60

   30 expr: LET decllist IN . exprseq END

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    $default  reduce using rule 31 (exprseq)

    expr     go to state 31
    exprseq  go to state 93
    array    go to state 14
    lvalue   go to state 15


state 61

   46 decllist: decllist decl .

    $default  reduce using rule 46 (decllist)


state 62

   27 expr: WHILE expr DO . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 94
    array   go to state 14
    lvalue  go to state 15


state 63

   22 expr: '(' exprseq ')' .

    $default  reduce using rule 22 (expr)


state 64

   33 exprseq: exprseq ';' . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 95
    array   go to state 14
    lvalue  go to state 15


state 65

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   15     | expr "<>" expr .
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 15 (expr)


state 66

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   16     | expr "<=" expr .
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 16 (expr)


state 67

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   17     | expr ">=" expr .
   18     | expr . '&' expr
   19     | expr . '|' expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 17 (expr)


state 68

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   19     | expr '|' expr .

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45

    $default  reduce using rule 19 (expr)


state 69

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   18     | expr '&' expr .
   19     | expr . '|' expr

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45

    $default  reduce using rule 18 (expr)


state 70

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   12     | expr '=' expr .
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 12 (expr)


state 71

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   14     | expr '>' expr .
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 14 (expr)


state 72

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   13     | expr '<' expr .
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    "<>"  error (nonassociative)
    "<="  error (nonassociative)
    ">="  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 13 (expr)


state 73

    8 expr: expr . '+' expr
    8     | expr '+' expr .
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 8 (expr)


state 74

    8 expr: expr . '+' expr
    9     | expr . '-' expr
    9     | expr '-' expr .
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 9 (expr)


state 75

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   10     | expr '*' expr .
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr

    $default  reduce using rule 10 (expr)


state 76

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   11     | expr '/' expr .
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr

    $default  reduce using rule 11 (expr)


state 77

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   24     | array OF expr .

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45

    "<>"      [reduce using rule 24 (expr)]
    "<="      [reduce using rule 24 (expr)]
    ">="      [reduce using rule 24 (expr)]
    '|'       [reduce using rule 24 (expr)]
    '&'       [reduce using rule 24 (expr)]
    '='       [reduce using rule 24 (expr)]
    '>'       [reduce using rule 24 (expr)]
    '<'       [reduce using rule 24 (expr)]
    '+'       [reduce using rule 24 (expr)]
    '-'       [reduce using rule 24 (expr)]
    '*'       [reduce using rule 24 (expr)]
    '/'       [reduce using rule 24 (expr)]
    $default  reduce using rule 24 (expr)


state 78

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   20     | lvalue ":=" expr .

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45

    $default  reduce using rule 20 (expr)


state 79

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   44 lvalue: lvalue '[' expr . ']'

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45
    ']'   shift, and go to state 96


state 80

   42 lvalue: lvalue '.' IDENTIFIER .

    $default  reduce using rule 42 (lvalue)


state 81

   21 expr: IDENTIFIER '(' exprlist ')' .

    $default  reduce using rule 21 (expr)


state 82

   36 exprlist: exprlist ',' . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 97
    array   go to state 14
    lvalue  go to state 15


state 83

   38 fieldlist: IDENTIFIER '=' . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 98
    array   go to state 14
    lvalue  go to state 15


state 84

   23 expr: IDENTIFIER '{' fieldlist '}' .

    $default  reduce using rule 23 (expr)


state 85

   39 fieldlist: fieldlist ',' . IDENTIFIER '=' expr

    IDENTIFIER  shift, and go to state 99


state 86

   40 array: IDENTIFIER '[' expr ']' .

    $default  reduce using rule 40 (array)


state 87

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   28     | FOR IDENTIFIER ":=" expr . TO expr DO expr

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    TO    shift, and go to state 100
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45


state 88

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   25     | IF expr THEN expr .
   26     | IF expr THEN expr . ELSE expr

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    ELSE  shift, and go to state 101
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45

    "<>"      [reduce using rule 25 (expr)]
    "<="      [reduce using rule 25 (expr)]
    ">="      [reduce using rule 25 (expr)]
    ELSE      [reduce using rule 25 (expr)]
    '|'       [reduce using rule 25 (expr)]
    '&'       [reduce using rule 25 (expr)]
    '='       [reduce using rule 25 (expr)]
    '>'       [reduce using rule 25 (expr)]
    '<'       [reduce using rule 25 (expr)]
    '+'       [reduce using rule 25 (expr)]
    '-'       [reduce using rule 25 (expr)]
    '*'       [reduce using rule 25 (expr)]
    '/'       [reduce using rule 25 (expr)]
    $default  reduce using rule 25 (expr)


state 89

   60 funcdecl: FUNCTION IDENTIFIER '(' . typefields ')' '=' expr
   61         | FUNCTION IDENTIFIER '(' . typefields ')' ':' IDENTIFIER '=' expr

    IDENTIFIER  shift, and go to state 102

    $default  reduce using rule 54 (typefields)

    typefields  go to state 103
    typefield   go to state 104


state 90

   50 typedecl: TYPE IDENTIFIER '=' . type

    IDENTIFIER  shift, and go to state 105
    ARRAY       shift, and go to state 106
    '{'         shift, and go to state 107

    type  go to state 108


state 91

   58 vardecl: VAR IDENTIFIER ":=" . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 109
    array   go to state 14
    lvalue  go to state 15


state 92

   59 vardecl: VAR IDENTIFIER ':' . IDENTIFIER ":=" expr

    IDENTIFIER  shift, and go to state 110


state 93

   30 expr: LET decllist IN exprseq . END
   33 exprseq: exprseq . ';' expr

    END  shift, and go to state 111
    ';'  shift, and go to state 64


state 94

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   27     | WHILE expr DO expr .

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45

    "<>"      [reduce using rule 27 (expr)]
    "<="      [reduce using rule 27 (expr)]
    ">="      [reduce using rule 27 (expr)]
    '|'       [reduce using rule 27 (expr)]
    '&'       [reduce using rule 27 (expr)]
    '='       [reduce using rule 27 (expr)]
    '>'       [reduce using rule 27 (expr)]
    '<'       [reduce using rule 27 (expr)]
    '+'       [reduce using rule 27 (expr)]
    '-'       [reduce using rule 27 (expr)]
    '*'       [reduce using rule 27 (expr)]
    '/'       [reduce using rule 27 (expr)]
    $default  reduce using rule 27 (expr)


state 95

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   33 exprseq: exprseq ';' expr .

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45

    $default  reduce using rule 33 (exprseq)


state 96

   44 lvalue: lvalue '[' expr ']' .

    $default  reduce using rule 44 (lvalue)


state 97

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   36 exprlist: exprlist ',' expr .

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45

    $default  reduce using rule 36 (exprlist)


state 98

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   38 fieldlist: IDENTIFIER '=' expr .

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45

    $default  reduce using rule 38 (fieldlist)


state 99

   39 fieldlist: fieldlist ',' IDENTIFIER . '=' expr

    '='  shift, and go to state 112


state 100

   28 expr: FOR IDENTIFIER ":=" expr TO . expr DO expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 113
    array   go to state 14
    lvalue  go to state 15


state 101

   26 expr: IF expr THEN expr ELSE . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 114
    array   go to state 14
    lvalue  go to state 15


state 102

   57 typefield: IDENTIFIER . ':' IDENTIFIER

    ':'  shift, and go to state 115


state 103

   56 typefields: typefields . ',' typefield
   60 funcdecl: FUNCTION IDENTIFIER '(' typefields . ')' '=' expr
   61         | FUNCTION IDENTIFIER '(' typefields . ')' ':' IDENTIFIER '=' expr

    ')'  shift, and go to state 116
    ','  shift, and go to state 117


state 104

   55 typefields: typefield .

    $default  reduce using rule 55 (typefields)


state 105

   51 type: IDENTIFIER .

    $default  reduce using rule 51 (type)


state 106

   53 type: ARRAY . OF IDENTIFIER

    OF  shift, and go to state 118


state 107

   52 type: '{' . typefields '}'

    IDENTIFIER  shift, and go to state 102

    $default  reduce using rule 54 (typefields)

    typefields  go to state 119
    typefield   go to state 104


state 108

   50 typedecl: TYPE IDENTIFIER '=' type .

    $default  reduce using rule 50 (typedecl)


state 109

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   58 vardecl: VAR IDENTIFIER ":=" expr .

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45

    $default  reduce using rule 58 (vardecl)


state 110

   59 vardecl: VAR IDENTIFIER ':' IDENTIFIER . ":=" expr

    ":="  shift, and go to state 120


state 111

   30 expr: LET decllist IN exprseq END .

    $default  reduce using rule 30 (expr)


state 112

   39 fieldlist: fieldlist ',' IDENTIFIER '=' . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 121
    array   go to state 14
    lvalue  go to state 15


state 113

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   28     | FOR IDENTIFIER ":=" expr TO expr . DO expr

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    DO    shift, and go to state 122
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45


state 114

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   26     | IF expr THEN expr ELSE expr .

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45

    "<>"      [reduce using rule 26 (expr)]
    "<="      [reduce using rule 26 (expr)]
    ">="      [reduce using rule 26 (expr)]
    '|'       [reduce using rule 26 (expr)]
    '&'       [reduce using rule 26 (expr)]
    '='       [reduce using rule 26 (expr)]
    '>'       [reduce using rule 26 (expr)]
    '<'       [reduce using rule 26 (expr)]
    '+'       [reduce using rule 26 (expr)]
    '-'       [reduce using rule 26 (expr)]
    '*'       [reduce using rule 26 (expr)]
    '/'       [reduce using rule 26 (expr)]
    $default  reduce using rule 26 (expr)


state 115

   57 typefield: IDENTIFIER ':' . IDENTIFIER

    IDENTIFIER  shift, and go to state 123


state 116

   60 funcdecl: FUNCTION IDENTIFIER '(' typefields ')' . '=' expr
   61         | FUNCTION IDENTIFIER '(' typefields ')' . ':' IDENTIFIER '=' expr

    '='  shift, and go to state 124
    ':'  shift, and go to state 125


state 117

   56 typefields: typefields ',' . typefield

    IDENTIFIER  shift, and go to state 102

    typefield  go to state 126


state 118

   53 type: ARRAY OF . IDENTIFIER

    IDENTIFIER  shift, and go to state 127


state 119

   52 type: '{' typefields . '}'
   56 typefields: typefields . ',' typefield

    '}'  shift, and go to state 128
    ','  shift, and go to state 117


state 120

   59 vardecl: VAR IDENTIFIER ':' IDENTIFIER ":=" . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 129
    array   go to state 14
    lvalue  go to state 15


state 121

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   39 fieldlist: fieldlist ',' IDENTIFIER '=' expr .

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45

    $default  reduce using rule 39 (fieldlist)


state 122

   28 expr: FOR IDENTIFIER ":=" expr TO expr DO . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 130
    array   go to state 14
    lvalue  go to state 15


state 123

   57 typefield: IDENTIFIER ':' IDENTIFIER .

    $default  reduce using rule 57 (typefield)


state 124

   60 funcdecl: FUNCTION IDENTIFIER '(' typefields ')' '=' . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 131
    array   go to state 14
    lvalue  go to state 15


state 125

   61 funcdecl: FUNCTION IDENTIFIER '(' typefields ')' ':' . IDENTIFIER '=' expr

    IDENTIFIER  shift, and go to state 132


state 126

   56 typefields: typefields ',' typefield .

    $default  reduce using rule 56 (typefields)


state 127

   53 type: ARRAY OF IDENTIFIER .

    $default  reduce using rule 53 (type)


state 128

   52 type: '{' typefields '}' .

    $default  reduce using rule 52 (type)


state 129

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   59 vardecl: VAR IDENTIFIER ':' IDENTIFIER ":=" expr .

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45

    $default  reduce using rule 59 (vardecl)


state 130

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   28     | FOR IDENTIFIER ":=" expr TO expr DO expr .

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45

    "<>"      [reduce using rule 28 (expr)]
    "<="      [reduce using rule 28 (expr)]
    ">="      [reduce using rule 28 (expr)]
    '|'       [reduce using rule 28 (expr)]
    '&'       [reduce using rule 28 (expr)]
    '='       [reduce using rule 28 (expr)]
    '>'       [reduce using rule 28 (expr)]
    '<'       [reduce using rule 28 (expr)]
    '+'       [reduce using rule 28 (expr)]
    '-'       [reduce using rule 28 (expr)]
    '*'       [reduce using rule 28 (expr)]
    '/'       [reduce using rule 28 (expr)]
    $default  reduce using rule 28 (expr)


state 131

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   60 funcdecl: FUNCTION IDENTIFIER '(' typefields ')' '=' expr .

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45

    $default  reduce using rule 60 (funcdecl)


state 132

   61 funcdecl: FUNCTION IDENTIFIER '(' typefields ')' ':' IDENTIFIER . '=' expr

    '='  shift, and go to state 133


state 133

   61 funcdecl: FUNCTION IDENTIFIER '(' typefields ')' ':' IDENTIFIER '=' . expr

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 2
    STRING      shift, and go to state 3
    BREAK       shift, and go to state 4
    FOR         shift, and go to state 5
    IF          shift, and go to state 6
    LET         shift, and go to state 7
    NIL         shift, and go to state 8
    WHILE       shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expr    go to state 134
    array   go to state 14
    lvalue  go to state 15


state 134

    8 expr: expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '=' expr
   13     | expr . '<' expr
   14     | expr . '>' expr
   15     | expr . "<>" expr
   16     | expr . "<=" expr
   17     | expr . ">=" expr
   18     | expr . '&' expr
   19     | expr . '|' expr
   61 funcdecl: FUNCTION IDENTIFIER '(' typefields ')' ':' IDENTIFIER '=' expr .

    "<>"  shift, and go to state 34
    "<="  shift, and go to state 35
    ">="  shift, and go to state 36
    '|'   shift, and go to state 37
    '&'   shift, and go to state 38
    '='   shift, and go to state 39
    '>'   shift, and go to state 40
    '<'   shift, and go to state 41
    '+'   shift, and go to state 42
    '-'   shift, and go to state 43
    '*'   shift, and go to state 44
    '/'   shift, and go to state 45

    $default  reduce using rule 61 (funcdecl)
